/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_DEBUGPRINTF_H
#define _MOCK_DEBUGPRINTF_H

#include "unity.h"
#include "debugPrintf.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void mock_debugPrintf_Init(void);
void mock_debugPrintf_Destroy(void);
void mock_debugPrintf_Verify(void);




#define dbg_printf_ln_Ignore() dbg_printf_ln_CMockIgnore()
void dbg_printf_ln_CMockIgnore(void);
#define dbg_printf_ln_StopIgnore() dbg_printf_ln_CMockStopIgnore()
void dbg_printf_ln_CMockStopIgnore(void);
#define dbg_printf_ln_Expect(text) dbg_printf_ln_CMockExpect(__LINE__, text)
void dbg_printf_ln_CMockExpect(UNITY_LINE_TYPE cmock_line, const char* text);
#define dbg_printf_Ignore() dbg_printf_CMockIgnore()
void dbg_printf_CMockIgnore(void);
#define dbg_printf_StopIgnore() dbg_printf_CMockStopIgnore()
void dbg_printf_CMockStopIgnore(void);
#define dbg_printf_Expect(text) dbg_printf_CMockExpect(__LINE__, text)
void dbg_printf_CMockExpect(UNITY_LINE_TYPE cmock_line, const char* text);
#define dbg_putc_IgnoreAndReturn(cmock_retval) dbg_putc_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void dbg_putc_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define dbg_putc_StopIgnore() dbg_putc_CMockStopIgnore()
void dbg_putc_CMockStopIgnore(void);
#define dbg_putc_ExpectAndReturn(d, cmock_retval) dbg_putc_CMockExpectAndReturn(__LINE__, d, cmock_retval)
void dbg_putc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t d, bool cmock_to_return);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
