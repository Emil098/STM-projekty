/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DEFAULTSCREENVIEWBASE_HPP
#define DEFAULTSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/defaultscreen_screen/DefaultScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <gui/containers/envContainer.hpp>
#include <gui/containers/LightContainer.hpp>

class DefaultScreenViewBase : public touchgfx::View<DefaultScreenPresenter>
{
public:
    DefaultScreenViewBase();
    virtual ~DefaultScreenViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();

    /*
     * Virtual Action Handlers
     */
    virtual void ScreenRoutine()
    {
        // Override and implement this function in DefaultScreen
    }
    virtual void LightWidgetUpdate()
    {
        // Override and implement this function in DefaultScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::TextAreaWithOneWildcard Title_text;
    touchgfx::SwipeContainer swipeContainer1;
    touchgfx::Container swipeContainer1PageEnv;
    envContainer envContainer1;
    touchgfx::Container swipeContainer1PageLight;
    LightContainer lightContainer1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TITLE_TEXT_SIZE = 30;
    touchgfx::Unicode::UnicodeChar Title_textBuffer[TITLE_TEXT_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DefaultScreenViewBase> lightContainer1WidgetChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void lightContainer1WidgetChangedCallbackHandler();

};

#endif // DEFAULTSCREENVIEWBASE_HPP
