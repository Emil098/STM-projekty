/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef LIGHTSCREENVIEWBASE_HPP
#define LIGHTSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/lightscreen_screen/LightScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <gui/containers/ColorContainer.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class LightScreenViewBase : public touchgfx::View<LightScreenPresenter>
{
public:
    LightScreenViewBase();
    virtual ~LightScreenViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void sliderChaged(uint8_t value)
    {
        // Override and implement this function in Screen1
    }
    

    /*
     * Virtual Action Handlers
     */
    virtual void NewColorSelected(uint32_t value)
    {
        // Override and implement this function in LightScreen
    }
    virtual void updateDefaultColor()
    {
        // Override and implement this function in LightScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::Image SliderBgBlue;
    touchgfx::Image SliderBgGreen;
    touchgfx::Image SliderBgRed;
    touchgfx::Slider sliderBlue;
    touchgfx::Slider sliderGreen;
    touchgfx::Slider sliderRed;
    ColorContainer colorContainer1;
    touchgfx::Button exitBtn;
    touchgfx::TextArea textAreaColorNameLabel;
    touchgfx::TextAreaWithOneWildcard textAreaColorName;
    touchgfx::ButtonWithLabel UpdateDefaultColBtn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREACOLORNAME_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textAreaColorNameBuffer[TEXTAREACOLORNAME_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<LightScreenViewBase, uint32_t> colorContainer1ColorSelected1Callback;
    touchgfx::Callback<LightScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<LightScreenViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void colorContainer1ColorSelected1CallbackHandler(uint32_t value);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // LIGHTSCREENVIEWBASE_HPP
