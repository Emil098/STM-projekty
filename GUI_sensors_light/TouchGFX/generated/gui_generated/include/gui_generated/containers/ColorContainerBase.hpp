/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef COLORCONTAINERBASE_HPP
#define COLORCONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/RadioButton.hpp>
#include <touchgfx/widgets/RadioButtonGroup.hpp>

class ColorContainerBase : public touchgfx::Container
{
public:
    ColorContainerBase();
    virtual ~ColorContainerBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setColorSelected1Callback(touchgfx::GenericCallback<uint32_t>& callback)
    {
        this->ColorSelected1Callback = &callback;
    }

    /*
     * Custom Actions
     */
    virtual void ColorSelected(uint32_t value);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitColorSelected1Callback(uint32_t value)
    {
        if (ColorSelected1Callback && ColorSelected1Callback->isValid())
        {
            this->ColorSelected1Callback->execute( value);
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::RadioButtonGroup<15> radioButtonColors;
    touchgfx::RadioButton radioGreen;
    touchgfx::RadioButton radioDeepBlueSky;
    touchgfx::RadioButton radioSpringGreen;
    touchgfx::RadioButton radioLawnGreen;
    touchgfx::RadioButton radioYellow;
    touchgfx::RadioButton radioBlue;
    touchgfx::RadioButton radioDodgerBlue;
    touchgfx::RadioButton radioViolet;
    touchgfx::RadioButton radioMagenta;
    touchgfx::RadioButton radioPurple;
    touchgfx::RadioButton radioPink;
    touchgfx::RadioButton radioOrange;
    touchgfx::RadioButton radioOrangeRed;
    touchgfx::RadioButton radioCrimson;
    touchgfx::RadioButton radioRed;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<uint32_t>* ColorSelected1Callback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ColorContainerBase, const touchgfx::AbstractButton&> radioButtonSelectedCallback;

    /*
     * Callback Handler Declarations
     */
    void radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // COLORCONTAINERBASE_HPP
