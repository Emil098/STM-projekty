/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/lightscreen_screen/LightScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

LightScreenViewBase::LightScreenViewBase() :
    colorContainer1ColorSelected1Callback(this, &LightScreenViewBase::colorContainer1ColorSelected1CallbackHandler),
    buttonCallback(this, &LightScreenViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &LightScreenViewBase::sliderValueChangedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
    add(image1);

    SliderBgBlue.setXY(0, 221);
    SliderBgBlue.setBitmap(touchgfx::Bitmap(BITMAP_SLIDERBGBLUE_ID));
    add(SliderBgBlue);

    SliderBgGreen.setXY(0, 172);
    SliderBgGreen.setBitmap(touchgfx::Bitmap(BITMAP_SLIDERBGGREEN_ID));
    add(SliderBgGreen);

    SliderBgRed.setXY(0, 123);
    SliderBgRed.setBitmap(touchgfx::Bitmap(BITMAP_SLIDERBGRED_ID));
    add(SliderBgRed);

    sliderBlue.setXY(34, 212);
    sliderBlue.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDERBG_ID), touchgfx::Bitmap(BITMAP_SLIDERACTIVEBLUE_ID), touchgfx::Bitmap(BITMAP_SLIDERINDICATOR_ID));
    sliderBlue.setupHorizontalSlider(0, 22, 15, 0, 221);
    sliderBlue.setValueRange(0, 255);
    sliderBlue.setValue(0);
    sliderBlue.setNewValueCallback(sliderValueChangedCallback);
    add(sliderBlue);

    sliderGreen.setXY(34, 163);
    sliderGreen.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDERBG_ID), touchgfx::Bitmap(BITMAP_SLIDERACTIVEGREEN_ID), touchgfx::Bitmap(BITMAP_SLIDERINDICATOR_ID));
    sliderGreen.setupHorizontalSlider(0, 22, 15, 0, 221);
    sliderGreen.setValueRange(0, 255);
    sliderGreen.setValue(0);
    sliderGreen.setNewValueCallback(sliderValueChangedCallback);
    add(sliderGreen);

    sliderRed.setXY(34, 114);
    sliderRed.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDERBG_ID), touchgfx::Bitmap(BITMAP_SLIDERACTIVERED_ID), touchgfx::Bitmap(BITMAP_SLIDERINDICATOR_ID));
    sliderRed.setupHorizontalSlider(0, 22, 15, 0, 221);
    sliderRed.setValueRange(0, 255);
    sliderRed.setValue(0);
    sliderRed.setNewValueCallback(sliderValueChangedCallback);
    add(sliderRed);

    colorContainer1.setXY(330, 11);
    colorContainer1.setColorSelected1Callback(colorContainer1ColorSelected1Callback);
    add(colorContainer1);

    exitBtn.setXY(0, 1);
    exitBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BACKREL_ID), touchgfx::Bitmap(BITMAP_BACKPRES_ID));
    exitBtn.setAction(buttonCallback);
    add(exitBtn);

    textAreaColorNameLabel.setPosition(52, 21, 85, 20);
    textAreaColorNameLabel.setColor(touchgfx::Color::getColorFromRGB(94, 99, 121));
    textAreaColorNameLabel.setLinespacing(0);
    textAreaColorNameLabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XJOZ));
    add(textAreaColorNameLabel);

    textAreaColorName.setPosition(137, 13, 193, 37);
    textAreaColorName.setColor(touchgfx::Color::getColorFromRGB(51, 194, 161));
    textAreaColorName.setLinespacing(0);
    Unicode::snprintf(textAreaColorNameBuffer, TEXTAREACOLORNAME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TKDZ).getText());
    textAreaColorName.setWildcard(textAreaColorNameBuffer);
    textAreaColorName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EFJ3));
    add(textAreaColorName);

    UpdateDefaultColBtn.setXY(7, 65);
    UpdateDefaultColBtn.setBitmaps(touchgfx::Bitmap(BITMAP_SPACEREL_ID), touchgfx::Bitmap(BITMAP_SPACEPRE_ID));
    UpdateDefaultColBtn.setLabelText(touchgfx::TypedText(T___SINGLEUSE_13DG));
    UpdateDefaultColBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    UpdateDefaultColBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(51, 194, 161));
    UpdateDefaultColBtn.setAction(buttonCallback);
    add(UpdateDefaultColBtn);
}

LightScreenViewBase::~LightScreenViewBase()
{

}

void LightScreenViewBase::setupScreen()
{
    colorContainer1.initialize();
}

void LightScreenViewBase::colorContainer1ColorSelected1CallbackHandler(uint32_t value)
{
    //ColorSelectedInteraction
    //When colorContainer1 ColorSelected1 call virtual function
    //Call NewColorSelected
    NewColorSelected(value);
}

void LightScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &exitBtn)
    {
        //ExitInteraction
        //When exitBtn clicked change screen to DefaultScreen
        //Go to DefaultScreen with screen transition towards North
        application().gotoDefaultScreenScreenSlideTransitionNorth();
    }
    if (&src == &UpdateDefaultColBtn)
    {
        //updateDefaultColorInteraction
        //When UpdateDefaultColBtn clicked call virtual function
        //Call updateDefaultColor
        updateDefaultColor();
    }
}

void LightScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &sliderBlue)
    {
        //sliderBlueInteraction
        //When sliderBlue value changed call sliderChaged on LightScreen
        //Call sliderChaged
        sliderChaged(value);
    }
    if (&src == &sliderGreen)
    {
        //sliderGreenInteraction
        //When sliderGreen value changed call sliderChaged on LightScreen
        //Call sliderChaged
        sliderChaged(value);
    }
    if (&src == &sliderRed)
    {
        //sliderRedInteraction
        //When sliderRed value changed call sliderChaged on LightScreen
        //Call sliderChaged
        sliderChaged(value);
    }
}
